{"ast":null,"code":"var _jsxFileName = \"/Users/sakshamrai/Desktop/Side-Projects/GymScout/src/components/HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../styles/HomePage.css\";\nimport fetchGyms from \"../utils/scraper.js\";\n\n// component for displaying individual gym card:\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GymCard = ({\n  name,\n  address\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"gym-card\",\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 5\n}, this);\n_c = GymCard;\nconst HomePage = () => {\n  _s();\n  const [gyms, setGyms] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const ITEMS_PER_PAGE = 8;\n  useEffect(() => {\n    const loadGyms = async () => {\n      try {\n        const data = await fetchGyms(page, ITEMS_PER_PAGE);\n        setGyms(prevGyms => [...prevGyms, ...data.gyms]); // ensures the new gyms array includes both old (prevGyms) and new gym items (data.gyms)\n        setHasMore(data.gyms.length > 0);\n      } catch (error) {\n        if (error instanceof Error) {\n          console.error(\"Failed to load gyms:\", error);\n        } else {\n          console.log('An unknown error occurred.');\n        }\n      }\n    };\n    loadGyms();\n  }, [page]);\n  const loadMore = () => {\n    if (hasMore) setPage(prevPage => prevPage + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Nearby Gyms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gym-grid\",\n      children: gyms.map(gym => /*#__PURE__*/_jsxDEV(GymCard, {\n        name: gym.name,\n        address: gym.address\n      }, gym.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), hasMore && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadMore,\n      className: \"load-more\",\n      children: \"Load More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"7x1Z+BiZkkzRFhWDtPShd6YY7HM=\");\n_c2 = HomePage;\nexport default HomePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"GymCard\");\n$RefreshReg$(_c2, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","fetchGyms","jsxDEV","_jsxDEV","GymCard","name","address","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","HomePage","_s","gyms","setGyms","page","setPage","hasMore","setHasMore","ITEMS_PER_PAGE","loadGyms","data","prevGyms","length","error","Error","console","log","loadMore","prevPage","map","gym","id","onClick","_c2","$RefreshReg$"],"sources":["/Users/sakshamrai/Desktop/Side-Projects/GymScout/src/components/HomePage.tsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport \"../styles/HomePage.css\";\nimport fetchGyms from \"../utils/scraper.js\";\n\n// component for displaying individual gym card:\nconst GymCard = ({name, address} : {name: string, address: string}) => (\n    <div className=\"gym-card\">\n        <h3>{name}</h3>\n        <p>{address}</p>\n    </div>\n);\n\nconst HomePage: React.FC = () => {\n    const[gyms, setGyms] = useState<any[]>([]);\n    const[page, setPage] = useState(1);\n    const[hasMore, setHasMore] = useState(true);\n    const ITEMS_PER_PAGE = 8;\n\n\n    useEffect(() => {\n        const loadGyms = async() => {\n            try {\n                const data = await fetchGyms(page, ITEMS_PER_PAGE);\n                setGyms((prevGyms) => [...prevGyms, ...data.gyms]); // ensures the new gyms array includes both old (prevGyms) and new gym items (data.gyms)\n                setHasMore(data.gyms.length > 0);\n            } catch (error) {\n                if (error instanceof Error) {\n                    console.error(\"Failed to load gyms:\", error);\n                }\n                else {\n                    console.log('An unknown error occurred.');\n                }\n            }\n        };\n        loadGyms();\n    }, [page]);\n\n    const loadMore = () => {\n        if (hasMore) setPage((prevPage) => prevPage + 1);\n    };\n\n    return (\n        <div className=\"homepage\">\n            <h1>Nearby Gyms</h1>\n            <div className=\"gym-grid\">\n                {gyms.map((gym) => (\n                    <GymCard key={gym.id} name={gym.name} address={ gym.address } />\n                ))}\n            </div>\n            {hasMore && (\n                <button onClick={loadMore} className=\"load-more\">\n                    Load More\n                </button>\n            )}\n        </div>\n    );\n};\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}